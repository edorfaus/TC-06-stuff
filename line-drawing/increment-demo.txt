// Draws lines by repeatedly adding an increment to a pixel.
OVERLAY main
// Assumed: R15 = 1
MOVI 5 @local:data_addr // R5 = ram[..] : load address of data to be drawn
MATH 4 4 1 // R4 = 0 : initialization for updating only parts of it
MATH 3 3 1 // R3 = 0 : initialization for updating only parts of it
MATH 2 2 1 // R2 = 0 : initialization for updating only parts of it
next:
 GETDATA 1 3 5         // R1 = read(disk, R5) : load next step
 MATH 15 5 0           // R5++ : update address
 PMOV 1 2  0  8  0 0   // R2[0:8] = R1[ 0: 8] : set start pixel
 PMOV 1 3  9 17  9 0   // R3[0:8] = R1[ 9:17] : set end pixel
 IFJMP 1 @local:done 0 // jump to done if R2 == R3
 PMOV 1 4 18 26 18 0   // R4[0:8] = R1[18:26] : set position increment
 loop:
  SETDATA 0 3 2         // Draw a pixel from R2
  MATH 4 2 0            // R2 += R4 : increment position
  IFJMP 1 @local:loop 1 // jump to loop if R2 != R3
 JMP 1 @local:next      // jump to next otherwise

done: HLT

data_addr: DATAC @disk:demo_data

END_OVERLAY

demo_data:
// Start pixel (is drawn), stop pixel (is not drawn), position increment
DATAC 0b_10_0001_001___10_1110_111___00_0000_001... // Main area fill, TL-to-BR
DATAC 0b_01_1110_111___00_1111_111___11_1111_000... // Bottom row, R-to-L
DATAC 0b_01_0000_110___00_1111_111___11_1111_111... // Left column, B-to-T
DATAC 0b_01_0001_000___10_0000_000___00_0001_000... // Top row, L-to-R
DATAC 0b_01_1111_001___10_0000_000___00_0000_001... // Right column, T-to-B

DATAC 0b_00_0001_010___00_0101_110___00_0001_001... // Black \ line
DATAC 0b_11_0001_101___11_0101_001___00_0000_111... // Light-green / line

DATAC 0b_00_0101_001___00_1111_001___00_0010_000... // Dotted line 1: 2px
DATAC 0b_00_0101_010___01_0001_010___00_0011_000... // Dotted line 2: 3px
DATAC 0b_00_0101_011___01_0001_011___00_0100_000... // Dotted line 3: 4px

DATAC 0b_00_0101_101___00_1111_101___00_0010_000... // 2-color line part 1
DATAC 0b_01_0110_101___10_0000_101___00_0010_000... // 2-color line part 1

DATAC 0b_00_0101_110___01_0001_110___00_0011_000... // 3-color line part 1
DATAC 0b_11_0110_110___11_1111_110___00_0011_000... // 3-color line part 2
DATAC 0b_01_0111_110___10_0000_110___00_0011_000... // 3-color line part 3

DATAC 0 // End of list
